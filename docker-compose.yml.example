version: '2'

services:

  workspace:
    container_name: workspace
    build: ./workspace
    tty: true
    volumes:
      - ${APPLICATION_PATH}:/var/www/
    networks:
      - frontend
      - backend

  openresty:
    container_name: openresty
    build: ./openresty
    volumes:
      - ./openresty/conf/nginx.conf:/etc/nginx/conf.d/conf/nginx.conf
      - ./openresty/conf/upstream.conf:/usr/local/openresty/nginx/conf/upstream.conf
      - ./openresty/conf/snippets:/usr/local/openresty/nginx/conf/snippets
      - ./openresty/sites:/usr/local/openresty/nginx/conf/sites
      - ${APPLICATION_PATH}:/var/www/
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend
      - backend
      
  # apache:
  #   build: ./apache
  #   volumes:
  #     - ${APPLICATION_PATH}:/var/www/
  #     - ./apache/sites:/etc/apache2/sites-available
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - frontend
  #     - backend

  php-fpm:
    container_name: php-fpm
    build:
      context: ./php-fpm
      # args:
      #   - PHP_OPCACHE=${PHP_OPCACHE}
    volumes:
      - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
      # - ./php-fpm/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ${APPLICATION_PATH}:/var/www
    networks:
      - backend

  phpmyadmin:
    container_name: phpmyadmin
    build: ./phpmyadmin
    environment:
      - PMA_HOST=mysql
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "8888:80"
    networks:
      - frontend
      - backend

  mysql:
    container_name: mysql
    build: ./mysql
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - backend

  redis:
    container_name: redis
    build: ./redis
    volumes:
      - ./data/redis:/data
    networks:
      - backend

  portainer:
    container_name: portainer
    build: ./portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data
    ports:
      - "9000:9000"
    networks:
      - frontend
      - backend

  svn-server:
    container_name: svn-server
    build: ./svn-server
    volumes:
      - ./data/svn-server:/var/opt/svn
    ports:
      - "3690:3690"

  gogs:
    container_name: gogs
    build: ./gogs
    volumes:
      - ./data/gogs:/data
    ports:
      - "10022:22"
      - "10080:3000"


networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge